/**
 * @fileoverview gRPC-Web generated client stub for listing
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.4.2
// 	protoc              v3.15.8
// source: listing.proto

/* eslint-disable */
// @ts-nocheck

const grpc = {};
grpc.web = require("grpc-web");

const proto = {};
proto.listing = require("./listing_pb.js");

/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.listing.ListingServiceClient = function (hostname, credentials, options) {
  if (!options) options = {};
  options.format = "text";

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, "");
};

/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.listing.ListingServicePromiseClient = function (
  hostname,
  credentials,
  options
) {
  if (!options) options = {};
  options.format = "text";

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, "");
};

/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.listing.CreateListingDto,
 *   !proto.listing.ProtoListing>}
 */
const methodDescriptor_ListingService_CreateListing =
  new grpc.web.MethodDescriptor(
    "/listing.ListingService/CreateListing",
    grpc.web.MethodType.UNARY,
    proto.listing.CreateListingDto,
    proto.listing.ProtoListing,
    /**
     * @param {!proto.listing.CreateListingDto} request
     * @return {!Uint8Array}
     */
    function (request) {
      return request.serializeBinary();
    },
    proto.listing.ProtoListing.deserializeBinary
  );

/**
 * @param {!proto.listing.CreateListingDto} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.listing.ProtoListing)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.listing.ProtoListing>|undefined}
 *     The XHR Node Readable Stream
 */
proto.listing.ListingServiceClient.prototype.createListing = function (
  request,
  metadata,
  callback
) {
  return this.client_.rpcCall(
    this.hostname_ + "/listing.ListingService/CreateListing",
    request,
    metadata || {},
    methodDescriptor_ListingService_CreateListing,
    callback
  );
};

/**
 * @param {!proto.listing.CreateListingDto} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.listing.ProtoListing>}
 *     Promise that resolves to the response
 */
proto.listing.ListingServicePromiseClient.prototype.createListing = function (
  request,
  metadata
) {
  return this.client_.unaryCall(
    this.hostname_ + "/listing.ListingService/CreateListing",
    request,
    metadata || {},
    methodDescriptor_ListingService_CreateListing
  );
};

/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.listing.Empty,
 *   !proto.listing.Listings>}
 */
const methodDescriptor_ListingService_FindAllListings =
  new grpc.web.MethodDescriptor(
    "/listing.ListingService/FindAllListings",
    grpc.web.MethodType.UNARY,
    proto.listing.Empty,
    proto.listing.Listings,
    /**
     * @param {!proto.listing.Empty} request
     * @return {!Uint8Array}
     */
    function (request) {
      return request.serializeBinary();
    },
    proto.listing.Listings.deserializeBinary
  );

/**
 * @param {!proto.listing.Empty} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.listing.Listings)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.listing.Listings>|undefined}
 *     The XHR Node Readable Stream
 */
proto.listing.ListingServiceClient.prototype.findAllListings = function (
  request,
  metadata,
  callback
) {
  return this.client_.rpcCall(
    this.hostname_ + "/listing.ListingService/FindAllListings",
    request,
    metadata || {},
    methodDescriptor_ListingService_FindAllListings,
    callback
  );
};

/**
 * @param {!proto.listing.Empty} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.listing.Listings>}
 *     Promise that resolves to the response
 */
proto.listing.ListingServicePromiseClient.prototype.findAllListings = function (
  request,
  metadata
) {
  return this.client_.unaryCall(
    this.hostname_ + "/listing.ListingService/FindAllListings",
    request,
    metadata || {},
    methodDescriptor_ListingService_FindAllListings
  );
};

/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.listing.FindOneListingDto,
 *   !proto.listing.ProtoListing>}
 */
const methodDescriptor_ListingService_FindOneListing =
  new grpc.web.MethodDescriptor(
    "/listing.ListingService/FindOneListing",
    grpc.web.MethodType.UNARY,
    proto.listing.FindOneListingDto,
    proto.listing.ProtoListing,
    /**
     * @param {!proto.listing.FindOneListingDto} request
     * @return {!Uint8Array}
     */
    function (request) {
      return request.serializeBinary();
    },
    proto.listing.ProtoListing.deserializeBinary
  );

/**
 * @param {!proto.listing.FindOneListingDto} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.listing.ProtoListing)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.listing.ProtoListing>|undefined}
 *     The XHR Node Readable Stream
 */
proto.listing.ListingServiceClient.prototype.findOneListing = function (
  request,
  metadata,
  callback
) {
  return this.client_.rpcCall(
    this.hostname_ + "/listing.ListingService/FindOneListing",
    request,
    metadata || {},
    methodDescriptor_ListingService_FindOneListing,
    callback
  );
};

/**
 * @param {!proto.listing.FindOneListingDto} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.listing.ProtoListing>}
 *     Promise that resolves to the response
 */
proto.listing.ListingServicePromiseClient.prototype.findOneListing = function (
  request,
  metadata
) {
  return this.client_.unaryCall(
    this.hostname_ + "/listing.ListingService/FindOneListing",
    request,
    metadata || {},
    methodDescriptor_ListingService_FindOneListing
  );
};

/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.listing.UpdateListingDto,
 *   !proto.listing.ProtoListing>}
 */
const methodDescriptor_ListingService_UpdateListing =
  new grpc.web.MethodDescriptor(
    "/listing.ListingService/UpdateListing",
    grpc.web.MethodType.UNARY,
    proto.listing.UpdateListingDto,
    proto.listing.ProtoListing,
    /**
     * @param {!proto.listing.UpdateListingDto} request
     * @return {!Uint8Array}
     */
    function (request) {
      return request.serializeBinary();
    },
    proto.listing.ProtoListing.deserializeBinary
  );

/**
 * @param {!proto.listing.UpdateListingDto} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.listing.ProtoListing)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.listing.ProtoListing>|undefined}
 *     The XHR Node Readable Stream
 */
proto.listing.ListingServiceClient.prototype.updateListing = function (
  request,
  metadata,
  callback
) {
  return this.client_.rpcCall(
    this.hostname_ + "/listing.ListingService/UpdateListing",
    request,
    metadata || {},
    methodDescriptor_ListingService_UpdateListing,
    callback
  );
};

/**
 * @param {!proto.listing.UpdateListingDto} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.listing.ProtoListing>}
 *     Promise that resolves to the response
 */
proto.listing.ListingServicePromiseClient.prototype.updateListing = function (
  request,
  metadata
) {
  return this.client_.unaryCall(
    this.hostname_ + "/listing.ListingService/UpdateListing",
    request,
    metadata || {},
    methodDescriptor_ListingService_UpdateListing
  );
};

/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.listing.FindOneListingDto,
 *   !proto.listing.ProtoListing>}
 */
const methodDescriptor_ListingService_RemoveListing =
  new grpc.web.MethodDescriptor(
    "/listing.ListingService/RemoveListing",
    grpc.web.MethodType.UNARY,
    proto.listing.FindOneListingDto,
    proto.listing.ProtoListing,
    /**
     * @param {!proto.listing.FindOneListingDto} request
     * @return {!Uint8Array}
     */
    function (request) {
      return request.serializeBinary();
    },
    proto.listing.ProtoListing.deserializeBinary
  );

/**
 * @param {!proto.listing.FindOneListingDto} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.listing.ProtoListing)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.listing.ProtoListing>|undefined}
 *     The XHR Node Readable Stream
 */
proto.listing.ListingServiceClient.prototype.removeListing = function (
  request,
  metadata,
  callback
) {
  return this.client_.rpcCall(
    this.hostname_ + "/listing.ListingService/RemoveListing",
    request,
    metadata || {},
    methodDescriptor_ListingService_RemoveListing,
    callback
  );
};

/**
 * @param {!proto.listing.FindOneListingDto} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.listing.ProtoListing>}
 *     Promise that resolves to the response
 */
proto.listing.ListingServicePromiseClient.prototype.removeListing = function (
  request,
  metadata
) {
  return this.client_.unaryCall(
    this.hostname_ + "/listing.ListingService/RemoveListing",
    request,
    metadata || {},
    methodDescriptor_ListingService_RemoveListing
  );
};

module.exports = proto.listing;
